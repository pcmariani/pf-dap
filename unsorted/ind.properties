Compound_Name=PF-05280014
document.dynamic.userdefined.ddp_SourceSqlQueryId=9
document.dynamic.userdefined.ddp_TableDefinitionId=51
document.dynamic.userdefined.ddp_sqlFromTableJson={"Name":"GLIMS_OWNER.X_COMPOUNDS","Alias":"C1"}
document.dynamic.userdefined.ddp_sqlColumnsJson=["PARENT_CMPD_ID","PARENT_COMPOUND_NAME","PARENT_COMPOUND_DESC","COMPOUND_ID","Compound_Name","COMPOUND_DESC","COMPOUND_COMMON_NAME","PRODUCT","PRODUCT_VER","Product_DESC","Product_Type","LOT_NAME","LOT_NUMBER","LOT_PRODUCTION_DATE","Material_Title","X_WORK_REQUEST","TEST_ARTICLE","PROTOCOL","PROTOCOL_LEVEL","CONDITION","TIMEPOINT","DISPLAY_STRING TP_STRING","Num_Months_Planned","Num_Months_Actual","BASE_DATE","TARGET_DATE","STAB_PULL_DATE","ORIGINAL_SAMPLE","ORIGINAL_SAMPLE_STATUS","SAMPLE_NUMBER","SAMPLE_STATUS","SAMPLE_NAME","SAMPLE_TYPE","TEMPLATE","STAGE","SPEC_TYPE","LOGIN_DATE","RECD_DATE","Sample_Date_Started","Sample_Date_Completed","Sample_Date_Reviewed","Sample_In_Spec","Sample_In_Control","Last_Modification_Date","TEST_NUMBER","TEST_STATUS","X_TEST_TYPE","ANALYSIS","Test_Description","Test_Reported_Name","T_Rep_Count","Analysis_Ver","T_Start_Date","R_METHOD","R_DATA_REF","R_TEST_LOC","R_TEST_DATE","RESULT_NUMBER","R_Rep_Count","RESULT_STATUS","Full_Authorized","R_NAME","R_REPORTED_NAME_ACTUAL","R_REPORTED_NAME_LATEST","R_ENTRY","R_FORMATTED_ENTRY","UNITS_STRING","R_NUMERIC_ENTRY","R_QUALIFIER","R_IN_SPEC","R_IN_CONTROL","ACCEPTANCE_CRITERIA","R_Entered_By","REPORTABLE","X_EXTERNAL_REPORT","ON_LPS"]
document.dynamic.userdefined.ddp_sqlStatement=SELECT --DISTINCT\n PC1.COMPOUND_ID AS PARENT_CMPD_ID,\n PC1.NAME AS PARENT_COMPOUND_NAME,\n PC1.DESCRIPTION AS PARENT_COMPOUND_DESC,\n C1.COMPOUND_ID,\n C1.NAME as Compound_Name,\n C1.DESCRIPTION as COMPOUND_DESC,\n C1.COMMON_NAME as COMPOUND_COMMON_NAME, \n S1.PRODUCT,\n S1.PRODUCT_VERSION as PRODUCT_VER,\n P1.DESCRIPTION as Product_DESC,\n P1.X_PRODUCT_TYPE as Product_Type,\n S1.LOT_NAME, --For Materials, this is NOT really a Pfizer Lot\n L1.LOT_NUMBER, --I am not sure WHY we need this.  We dont use this that I am aware of as a Foreign Key in any table.  We use LOT_NAME\n L1.PRODUCTION_DATE as LOT_PRODUCTION_DATE,\n M1.TITLE as Material_Title,\n S1.X_WORK_REQUEST,\n S1.FORMULATION as TEST_ARTICLE,\n S1.PROTOCOL,\n S1.PROTOCOL_LEVEL,\n S1.CONDITION,\n S1.TIMEPOINT,\n TP1.DISPLAY_STRING TP_STRING,\n ROUND(DECODE(TP1.NUM_MONTHS,0,TP1.INTERVAL/86400/30.4167, tp1.num_months), 2) as Num_Months_Planned,\n ROUND((S1.STAB_PULL_DATE - S1.BASE_DATE)/30.4167,2) as Num_Months_Actual,\n S1.BASE_DATE,\n S1.TARGET_DATE,\n S1.STAB_PULL_DATE,\n S1.SAMPLE_NUMBER as ORIGINAL_SAMPLE,\n S1.STATUS as ORIGINAL_SAMPLE_STATUS,\n S2.SAMPLE_NUMBER,\n S2.STATUS as SAMPLE_STATUS, \n S1.SAMPLE_NAME,\n S1.SAMPLE_TYPE,\n S2.TEMPLATE,  \n S1.STAGE, \n S1.SPEC_TYPE,\n \n S1.LOGIN_DATE,\n S1.RECD_DATE,\n S1.DATE_STARTED AS Sample_Date_Started, --Original Start Date,not necessarily Start if Child Test started earlier.\n S2.DATE_COMPLETED AS Sample_Date_Completed,\n S1.DATE_REVIEWED as Sample_Date_Reviewed,\n S1.IN_SPEC as Sample_In_Spec,\n S1.IN_CONTROL as Sample_In_Control,\n \n GREATEST(S1.CHANGED_ON, T1.CHANGED_ON, R1.CHANGED_ON, S2.CHANGED_ON) AS Last_Modification_Date,  \n T1.TEST_NUMBER,\n T1.STATUS as TEST_STATUS,\n T1.X_TEST_TYPE,\n T1.ANALYSIS, \n T1.DESCRIPTION as Test_Description,\n T1.REPORTED_NAME as Test_Reported_Name,\n T1.REPLICATE_COUNT as T_Rep_Count, \n      \n T1.VERSION as Analysis_Ver,\n T1.DATE_STARTED AS T_Start_Date,\n     \n RMETA.R_METHOD,\n RMETA.R_DATA_REF,\n RMETA.R_TEST_LOC,\n RMETA.R_TEST_DATE,\n \n R1.RESULT_NUMBER, \n R1.REPLICATE_COUNT as R_Rep_Count,\n R1.STATUS as RESULT_STATUS, \n     CASE\n         WHEN S1.STATUS || S2.STATUS || T1.STATUS || R1.STATUS = 'AAAA' \n         THEN 'T' \n        ELSE 'F'\n     END as Full_Authorized, \n \n R1.NAME as R_NAME,\n R1.REPORTED_NAME AS R_REPORTED_NAME_ACTUAL,\n COALESCE(PS1.REPORTED_NAME, R1.REPORTED_NAME) AS R_REPORTED_NAME_LATEST,\n \n R1.ENTRY as R_ENTRY, \n R1.FORMATTED_ENTRY AS R_FORMATTED_ENTRY,\n U1.DISPLAY_STRING as UNITS_STRING,  \n R1.NUMERIC_ENTRY as R_NUMERIC_ENTRY, \n R1.ENTRY_QUALIFIER as R_QUALIFIER, \n R1.IN_SPEC as R_IN_SPEC,\n R1.IN_CONTROL as R_IN_CONTROL,\n \n PS1.DESCRIPTION as ACCEPTANCE_CRITERIA,\n --PS1.TARGET as Target,\n --PS1.SPEC_RULE,\n --PS1.MIN_VALUE,\n --PS1.MAX_VALUE,\n \n \n R1.ENTERED_BY as R_Entered_By, \n R1.REPORTABLE,\n R1.X_EXTERNAL_REPORT,\n \n DECODE(PS1.COMPONENT, NULL, 'NO','YES') ON_LPS\n \n \n \n FROM \n     GLIMS_OWNER.X_COMPOUNDS C1\n     \n LEFT OUTER JOIN \n     GLIMS_OWNER.X_COMPOUNDS PC1 ON C1.PARENT_COMPOUND_NAME = PC1.NAME\n     \n INNER JOIN\n     GLIMS_OWNER.SAMPLE S1 --Original Sample \n     ON C1.COMPOUND_ID = S1.X_COMPOUND_ID\n     AND S1.SAMPLE_NUMBER = S1.ORIGINAL_SAMPLE\n     AND S1.STATUS IN ('A', 'C', 'P', 'U', 'I')\n     AND S1.GROUP_NAME <> 'TRAINING'\n     AND S1.PROTOCOL IS NOT NULL --For Stability (or not)  \n     \n INNER JOIN\n     GLIMS_OWNER.SAMPLE S2  --Sample (Parent or Child, but not Investigational/Resample)\n     ON S1.SAMPLE_NUMBER = S2.ORIGINAL_SAMPLE AND NOT(S2.SAMPLE_NUMBER <> S2.ORIGINAL_SAMPLE and S2.PARENT_ALIQUOT = 0)\n     AND S2.STATUS IN ('A', 'C', 'P', 'U', 'I')     \n \n INNER JOIN\n     GLIMS_OWNER.TEST T1 \n     ON S2.SAMPLE_NUMBER = T1.SAMPLE_NUMBER\n     AND T1.STATUS IN ('A', 'C', 'P')\n      \n INNER JOIN\n     (select x.test_number, \n     MAX(DECODE(instr(x.name, 'Method No. '),1,x.formatted_entry)) as R_METHOD,\n     MAX(DECODE(x.name, 'Data Reference', x.formatted_entry)) as R_DATA_REF,\n     MAX(DECODE(x.name, 'Test Location', x.formatted_entry)) as R_TEST_LOC,\n     MAX(DECODE(x.name, 'Test Date', x.formatted_entry)) as R_TEST_DATE\n     from GLIMS_OWNER.result x\n     where x.status not in ('X', 'R', 'N')\n     and (x.Reported_name in ('Test Date', 'Test Location', 'Data Reference') OR instr(x.name, 'Method No') = 1)\n     group by x.test_number) RMETA\n     ON T1.TEST_NUMBER = RMETA.TEST_NUMBER\n     \n INNER JOIN\n     GLIMS_OWNER.RESULT R1 \n     ON T1.TEST_NUMBER = R1.TEST_NUMBER  \n     and r1.name NOT in ('Test Date', 'Test Location', 'Data Reference', 'Method No. & Version/Effective Date', 'Method No. & Version/ Effective Date')\n     and r1.status not in ('X', 'R', 'N')\n     \n LEFT OUTER JOIN\n     GLIMS_OWNER.UNITS U1\n     ON R1.UNITS = U1.UNIT_CODE\n \n LEFT OUTER JOIN \n     GLIMS_OWNER.PRODUCT_SPEC PS1 \n     ON S1.PRODUCT = PS1.PRODUCT \n \n     AND PS1.VERSION = (SELECT MAX(X1.VERSION) FROM GLIMS_OWNER.PRODUCT X1 WHERE S1.PRODUCT = X1.NAME AND X1.ACTIVE = 'T')\n \n     AND S1.PRODUCT_GRADE = PS1.GRADE \n     AND S1.SAMPLING_POINT = PS1.SAMPLING_POINT     \n     AND S1.SPEC_TYPE = PS1.SPEC_TYPE \n     AND S1.STAGE = PS1.STAGE\n     AND T1.ANALYSIS = PS1.ANALYSIS \n     AND R1.NAME = PS1.COMPONENT\n     AND PS1.RULE_TYPE<> 'F'\n     \n LEFT OUTER JOIN GLIMS_OWNER.PRODUCT P1\n     ON S1.PRODUCT = P1.NAME \n     AND S1.PRODUCT_VERSION = P1.VERSION\n \n LEFT OUTER JOIN \n     GLIMS_OWNER.LOT L1 \n     ON S1.LOT_NAME = L1.LOT_NAME\n        \n LEFT OUTER JOIN\n     GLIMS_OWNER.X_MATERIAL M1\n     ON S1.LOT_NAME = M1.NAME\n     \n LEFT OUTER JOIN\n     GLIMS_OWNER.TIMEPOINT TP1\n     ON S1.TIMEPOINT = TP1.NAME \n \n WHERE \n (C1.NAME = ? OR PC1.NAME = ?) AND S1.LOT_NAME = ? AND S1.PROTOCOL = ? AND S1.PROTOCOL_LEVEL = ? AND S1.CONDITION = ?\n \n --(C1.NAME = 'PF-05280014' OR PC1.NAME = 'PF-05280014') AND S1.LOT_NAME = 'Z00514' AND S1.PROTOCOL = 'PF-05280014:1-007' AND S1.PROTOCOL_LEVEL = 'INVERTED' AND S1.CONDITION = '05C'\n --(C1.NAME = 'PF-05280014' OR PC1.NAME = 'PF-05280014') AND S1.LOT_NAME = 'Z00514' AND S1.PROTOCOL = 'PF-05280014:1-007' AND S1.PROTOCOL_LEVEL = 'INVERTED' AND S1.CONDITION = '30C_75RH'\n --(C1.NAME = 'PF-05280014' OR PC1.NAME = 'PF-05280014') AND S1.LOT_NAME = 'Z00514' AND S1.PROTOCOL = 'PF-05280014:1-007' AND S1.PROTOCOL_LEVEL = 'INVERTED' AND S1.CONDITION = '40C_75RH'\n --(C1.NAME = 'PF-05280014' OR PC1.NAME = 'PF-05280014') AND S1.LOT_NAME = '88003' AND S1.PROTOCOL = 'PF-05280014:1-017' AND S1.PROTOCOL_LEVEL = 'BASE' AND S1.CONDITION = '-40C'\n --(C1.NAME = 'PF-05280014' OR PC1.NAME = 'PF-05280014') AND S1.LOT_NAME = '88003' AND S1.PROTOCOL = 'PF-05280014:1-017' AND S1.PROTOCOL_LEVEL = 'BASE' AND S1.CONDITION = '-20C'\n --(C1.NAME = 'PF-05280014' OR PC1.NAME = 'PF-05280014') AND S1.LOT_NAME = '88003' AND S1.PROTOCOL = 'PF-05280014:1-017' AND S1.PROTOCOL_LEVEL = 'BASE' AND S1.CONDITION = '05C'\n \n \n --C1.NAME <> 'XYZ'\n --(C1.NAME = 'PF-07252220' OR PC1.NAME = 'PF-02150736')\n \n --661  --PF-06410293 (Adalimumab)\n --527 PF-05280014 (Trastuzumab)\n --487 PF-05280586 Rituximab\n --S1.PROTOCOL = 'PF-06801591:2-004' --Example of GMP/LPS Stability\n --AND S2.SAMPLE_NUMBER = 1204776\n --AND S1.PRODUCT IS NOT NULL\n --'00712991-0005-001'  --Example of R&D Stability (no Product Spec)\n     \n ORDER BY S1.PRODUCT, S1.LOT_NAME, S2.SAMPLE_NUMBER, T1.ANALYSIS, T1.TEST_NUMBER, R1.order_number\n ;
document.dynamic.userdefined.ddp_sqlMetadataJson={"Columns":[{"Name":"PARENT_CMPD_ID"},{"Name":"PARENT_COMPOUND_NAME"},{"Name":"PARENT_COMPOUND_DESC"},{"Name":"COMPOUND_ID"},{"Name":"Compound_Name"},{"Name":"COMPOUND_DESC"},{"Name":"COMPOUND_COMMON_NAME"},{"Name":"PRODUCT"},{"Name":"PRODUCT_VER"},{"Name":"Product_DESC"},{"Name":"Product_Type"},{"Name":"LOT_NAME"},{"Name":"LOT_NUMBER"},{"Name":"LOT_PRODUCTION_DATE"},{"Name":"Material_Title"},{"Name":"X_WORK_REQUEST"},{"Name":"TEST_ARTICLE"},{"Name":"PROTOCOL"},{"Name":"PROTOCOL_LEVEL"},{"Name":"CONDITION"},{"Name":"TIMEPOINT"},{"Name":"DISPLAY_STRING TP_STRING"},{"Name":"Num_Months_Planned"},{"Name":"Num_Months_Actual"},{"Name":"BASE_DATE"},{"Name":"TARGET_DATE"},{"Name":"STAB_PULL_DATE"},{"Name":"ORIGINAL_SAMPLE"},{"Name":"ORIGINAL_SAMPLE_STATUS"},{"Name":"SAMPLE_NUMBER"},{"Name":"SAMPLE_STATUS"},{"Name":"SAMPLE_NAME"},{"Name":"SAMPLE_TYPE"},{"Name":"TEMPLATE"},{"Name":"STAGE"},{"Name":"SPEC_TYPE"},{"Name":"LOGIN_DATE"},{"Name":"RECD_DATE"},{"Name":"Sample_Date_Started"},{"Name":"Sample_Date_Completed"},{"Name":"Sample_Date_Reviewed"},{"Name":"Sample_In_Spec"},{"Name":"Sample_In_Control"},{"Name":"Last_Modification_Date"},{"Name":"TEST_NUMBER"},{"Name":"TEST_STATUS"},{"Name":"X_TEST_TYPE"},{"Name":"ANALYSIS"},{"Name":"Test_Description"},{"Name":"Test_Reported_Name"},{"Name":"T_Rep_Count"},{"Name":"Analysis_Ver"},{"Name":"T_Start_Date"},{"Name":"R_METHOD"},{"Name":"R_DATA_REF"},{"Name":"R_TEST_LOC"},{"Name":"R_TEST_DATE"},{"Name":"RESULT_NUMBER"},{"Name":"R_Rep_Count"},{"Name":"RESULT_STATUS"},{"Name":"Full_Authorized"},{"Name":"R_NAME"},{"Name":"R_REPORTED_NAME_ACTUAL"},{"Name":"R_REPORTED_NAME_LATEST"},{"Name":"R_ENTRY"},{"Name":"R_FORMATTED_ENTRY"},{"Name":"UNITS_STRING"},{"Name":"R_NUMERIC_ENTRY"},{"Name":"R_QUALIFIER"},{"Name":"R_IN_SPEC"},{"Name":"R_IN_CONTROL"},{"Name":"ACCEPTANCE_CRITERIA"},{"Name":"R_Entered_By"},{"Name":"REPORTABLE"},{"Name":"X_EXTERNAL_REPORT"},{"Name":"ON_LPS"}],"Params":[{"Group":0,"Conjunction":null,"Table":"GLIMS_OWNER.X_COMPOUNDS","Column":"C1.NAME","Operator":"=","MultiSelect":false},{"Group":0,"Conjunction":"OR","Table":"GLIMS_OWNER.X_COMPOUNDS","Column":"PC1.NAME","Operator":"=","MultiSelect":false},{"Group":1,"Conjunction":"AND","Table":"GLIMS_OWNER.SAMPLE","Column":"S1.LOT_NAME","Operator":"=","MultiSelect":false},{"Group":1,"Conjunction":"AND","Table":"GLIMS_OWNER.SAMPLE","Column":"S1.PROTOCOL","Operator":"=","MultiSelect":false},{"Group":1,"Conjunction":"AND","Table":"GLIMS_OWNER.SAMPLE","Column":"S1.PROTOCOL_LEVEL","Operator":"=","MultiSelect":false},{"Group":1,"Conjunction":"AND","Table":"GLIMS_OWNER.SAMPLE","Column":"S1.CONDITION","Operator":"=","MultiSelect":false}]}
document.dynamic.userdefined.ddp_sqlTablesJson={"C1":{"table":"GLIMS_OWNER.X_COMPOUNDS"},"PC1":{"join":"LEFT OUTER JOIN \n    GLIMS_OWNER.X_COMPOUNDS PC1 ON C1.PARENT_COMPOUND_NAME = PC1.NAME","table":"GLIMS_OWNER.X_COMPOUNDS"},"S1":{"join":"INNER JOIN\n    GLIMS_OWNER.SAMPLE S1 \n    ON C1.COMPOUND_ID = S1.X_COMPOUND_ID\n    AND S1.SAMPLE_NUMBER = S1.ORIGINAL_SAMPLE\n    AND S1.STATUS IN ('A', 'C', 'P', 'U', 'I')\n    AND S1.GROUP_NAME <> 'TRAINING'\n    AND S1.PROTOCOL IS NOT NULL","table":"GLIMS_OWNER.SAMPLE"},"S2":{"join":"INNER JOIN\n    GLIMS_OWNER.SAMPLE S2  \n    ON S1.SAMPLE_NUMBER = S2.ORIGINAL_SAMPLE AND NOT(S2.SAMPLE_NUMBER <> S2.ORIGINAL_SAMPLE and S2.PARENT_ALIQUOT = 0)\n    AND S2.STATUS IN ('A', 'C', 'P', 'U', 'I')","table":"GLIMS_OWNER.SAMPLE"},"T1":{"join":"INNER JOIN\n    GLIMS_OWNER.TEST T1 \n    ON S2.SAMPLE_NUMBER = T1.SAMPLE_NUMBER\n    AND T1.STATUS IN ('A', 'C', 'P')","table":"GLIMS_OWNER.TEST"},"RMETA":{"join":"INNER JOIN\n    (select x.test_number, \n    MAX(DECODE(instr(x.name, 'Method No. '),1,x.formatted_entry)) as R_METHOD,\n    MAX(DECODE(x.name, 'Data Reference', x.formatted_entry)) as R_DATA_REF,\n    MAX(DECODE(x.name, 'Test Location', x.formatted_entry)) as R_TEST_LOC,\n    MAX(DECODE(x.name, 'Test Date', x.formatted_entry)) as R_TEST_DATE\n    from GLIMS_OWNER.result x\n    where x.status not in ('X', 'R', 'N')\n    and (x.Reported_name in ('Test Date', 'Test Location', 'Data Reference') OR instr(x.name, 'Method No') = 1)\n    group by x.test_number) RMETA\n    ON T1.TEST_NUMBER = RMETA.TEST_NUMBER","table":"(select x.test_number, \n    MAX(DECODE(instr(x.name, 'Method No. '),1,x.formatted_entry)) as R_METHOD,\n    MAX(DECODE(x.name, 'Data Reference', x.formatted_entry)) as R_DATA_REF,\n    MAX(DECODE(x.name, 'Test Location', x.formatted_entry)) as R_TEST_LOC,\n    MAX(DECODE(x.name, 'Test Date', x.formatted_entry)) as R_TEST_DATE\n    from GLIMS_OWNER.result x\n    where x.status not in ('X', 'R', 'N')\n    and (x.Reported_name in ('Test Date', 'Test Location', 'Data Reference') OR instr(x.name, 'Method No') = 1)\n    group by x.test_number)"},"R1":{"join":"INNER JOIN\n    GLIMS_OWNER.RESULT R1 \n    ON T1.TEST_NUMBER = R1.TEST_NUMBER  \n    and r1.name NOT in ('Test Date', 'Test Location', 'Data Reference', 'Method No. & Version/Effective Date', 'Method No. & Version/ Effective Date')\n    and r1.status not in ('X', 'R', 'N')","table":"GLIMS_OWNER.RESULT"},"U1":{"join":"LEFT OUTER JOIN\n    GLIMS_OWNER.UNITS U1\n    ON R1.UNITS = U1.UNIT_CODE","table":"GLIMS_OWNER.UNITS"},"PS1":{"join":"LEFT OUTER JOIN \n    GLIMS_OWNER.PRODUCT_SPEC PS1 \n    ON S1.PRODUCT = PS1.PRODUCT \n    AND PS1.VERSION = (SELECT MAX(X1.VERSION) FROM GLIMS_OWNER.PRODUCT X1 WHERE S1.PRODUCT = X1.NAME AND X1.ACTIVE = 'T')\n    AND S1.PRODUCT_GRADE = PS1.GRADE \n    AND S1.SAMPLING_POINT = PS1.SAMPLING_POINT     \n    AND S1.SPEC_TYPE = PS1.SPEC_TYPE \n    AND S1.STAGE = PS1.STAGE\n    AND T1.ANALYSIS = PS1.ANALYSIS \n    AND R1.NAME = PS1.COMPONENT\n    AND PS1.RULE_TYPE<> 'F'","table":"GLIMS_OWNER.PRODUCT_SPEC"},"P1":{"join":"LEFT OUTER JOIN GLIMS_OWNER.PRODUCT P1\n    ON S1.PRODUCT = P1.NAME \n    AND S1.PRODUCT_VERSION = P1.VERSION","table":"GLIMS_OWNER.PRODUCT"},"L1":{"join":"LEFT OUTER JOIN \n    GLIMS_OWNER.LOT L1 \n    ON S1.LOT_NAME = L1.LOT_NAME","table":"GLIMS_OWNER.LOT"},"M1":{"join":"LEFT OUTER JOIN\n    GLIMS_OWNER.X_MATERIAL M1\n    ON S1.LOT_NAME = M1.NAME","table":"GLIMS_OWNER.X_MATERIAL"},"TP1":{"join":"LEFT OUTER JOIN\n    GLIMS_OWNER.TIMEPOINT TP1\n    ON S1.TIMEPOINT = TP1.NAME","table":"GLIMS_OWNER.TIMEPOINT"}}
document.dynamic.userdefined.ddp_TableDefinition={ "Records": [{"TableDefinitionId":51,"Name":"Pete - LIMS IND Stability - Mar 31","Description":"Stability for IND LIMS","TableTitleText":"LIMS IND Stability Table for <Compound Name>, <Lot Name>, <Protocol>, <Protocol Level>, <Protocol Level>","TableTitleStringReplacements":[],"opt_canHaveSubTables":true,"opt_allowSuppressIfNoDataForAllRows":false,"CreatedBy":"Peter.Mariani@pfizer.com","CreatedDate":"2023-05-31T11:41:35.2600000","ModifiedBy":"Peter.Mariani@pfizer.com","ModifiedDate":"2023-05-31T16:31:26.1035228"}] }
document.dynamic.userdefined.ddp_sqlWhereParamsJson=[{"Group":0,"Conjunction":null,"Table":"GLIMS_OWNER.X_COMPOUNDS","Column":"C1.NAME","Operator":"=","MultiSelect":false},{"Group":0,"Conjunction":"OR","Table":"GLIMS_OWNER.X_COMPOUNDS","Column":"PC1.NAME","Operator":"=","MultiSelect":false},{"Group":1,"Conjunction":"AND","Table":"GLIMS_OWNER.SAMPLE","Column":"S1.LOT_NAME","Operator":"=","MultiSelect":false},{"Group":1,"Conjunction":"AND","Table":"GLIMS_OWNER.SAMPLE","Column":"S1.PROTOCOL","Operator":"=","MultiSelect":false},{"Group":1,"Conjunction":"AND","Table":"GLIMS_OWNER.SAMPLE","Column":"S1.PROTOCOL_LEVEL","Operator":"=","MultiSelect":false},{"Group":1,"Conjunction":"AND","Table":"GLIMS_OWNER.SAMPLE","Column":"S1.CONDITION","Operator":"=","MultiSelect":false}]
document.dynamic.userdefined.ddp_UserInputs={ "Records": [{"UserInputId":75,"TableDefinitionId":51,"UserInputName":"Compound Name","GlobalVariableName":"Compound Name","MultiSelect":false,"CreatedBy":"Peter.Mariani@pfizer.com","ModifiedBy":"Peter.Mariani@pfizer.com","CreatedDate":"2023-05-31T11:41:39.4166667","ModifiedDate":"2023-05-31T15:41:39.4176937"},{"UserInputId":76,"TableDefinitionId":51,"UserInputName":"Lot Name","MultiSelect":false,"CreatedBy":"Peter.Mariani@pfizer.com","ModifiedBy":"Peter.Mariani@pfizer.com","CreatedDate":"2023-05-31T11:41:39.9633333","ModifiedDate":"2023-05-31T15:41:39.9644524"},{"UserInputId":77,"TableDefinitionId":51,"UserInputName":"Protocol","MultiSelect":false,"CreatedBy":"Peter.Mariani@pfizer.com","ModifiedBy":"Peter.Mariani@pfizer.com","CreatedDate":"2023-05-31T11:41:40.5100000","ModifiedDate":"2023-05-31T15:41:40.5113159"},{"UserInputId":78,"TableDefinitionId":51,"UserInputName":"Protocol Level","MultiSelect":false,"CreatedBy":"Peter.Mariani@pfizer.com","ModifiedBy":"Peter.Mariani@pfizer.com","CreatedDate":"2023-05-31T11:41:41.0700000","ModifiedDate":"2023-05-31T15:41:41.0737650"},{"UserInputId":79,"TableDefinitionId":51,"UserInputName":"Condition","MultiSelect":false,"CreatedBy":"Peter.Mariani@pfizer.com","ModifiedBy":"Peter.Mariani@pfizer.com","CreatedDate":"2023-05-31T11:41:41.6200000","ModifiedDate":"2023-05-31T15:41:41.6206928"}] }
